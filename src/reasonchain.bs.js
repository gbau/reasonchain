// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List     = require("bs-platform/lib/js/list.js");
var JsSha256 = require("js-sha256");

function hashBlock(index, timestamp, data, previousHash) {
  return JsSha256.sha256("" + (String(index) + ("" + (String(timestamp) + ("" + (String(data) + ("" + (String(previousHash) + ""))))))));
}

function createBlock(block) {
  var index = block[/* index */0] + 1 | 0;
  var timestamp = Date.now();
  var data = "" + (String(index) + ("-" + (String(timestamp) + "")));
  var previousHash = block[/* hash */4];
  var hash = hashBlock(index, timestamp, data, previousHash);
  return /* record */[
          /* index */index,
          /* timestamp */timestamp,
          /* data */data,
          /* previousHash */previousHash,
          /* hash */hash
        ];
}

function range(a, b) {
  var match = +(a > b);
  if (match !== 0) {
    return /* [] */0;
  } else {
    return /* :: */[
            a,
            range(a + 1 | 0, b)
          ];
  }
}

var genesis_001 = /* timestamp */Date.now();

var genesis = /* record */[
  /* index */0,
  genesis_001,
  /* data */"genesis-block",
  /* previousHash */"prev-hash",
  /* hash */"genesis-hash"
];

var reasonchain = List.fold_left((function (blockchain, i) {
        var lastBlock = List.nth(blockchain, i - 1 | 0);
        var nextBlock = createBlock(lastBlock);
        return List.append(blockchain, /* :: */[
                    nextBlock,
                    /* [] */0
                  ]);
      }), /* :: */[
      genesis,
      /* [] */0
    ], range(1, 14));

List.iter((function (block) {
        console.log(block);
        return /* () */0;
      }), reasonchain);

exports.hashBlock   = hashBlock;
exports.createBlock = createBlock;
exports.range       = range;
exports.genesis     = genesis;
exports.reasonchain = reasonchain;
/* genesis Not a pure module */
